{"version":3,"sources":["context/AppReducer.js","context/GlobalState.js","components/AddTransaction.js","components/Balance.js","components/ExpenseTransaction.js","components/ExpenseList.js","components/Header.js","components/IncomeTransaction.js","components/IncomeList.js","App.js","reportWebVitals.js","index.js"],"names":["state","action","type","incomeTransactions","payload","expenseTransactions","filter","incomeTransaction","id","expenseTransaction","initialState","JSON","parse","localStorage","getItem","GlobalContext","createContext","GlobalContextProvider","children","useReducer","AppReducer","dispatch","useEffect","setItem","stringify","Provider","value","deleteTransaction","addIncome","addExpense","AddTransaction","useContext","useState","incomeText","incomeAmount","income","setIncome","expenseText","expenseAmount","expense","setExpense","onChangeExpense","e","target","name","onChangeIncome","className","onSubmit","preventDefault","newIncomeTransaction","uuidv4","placeholder","autoComplete","onChange","newExpenseTransaction","Balance","incomeAmounts","map","expenseAmounts","totalIncome","reduce","acc","item","toFixed","totalExpenses","ExpenseTransaction","onClick","ExpenseList","console","log","Header","IncomeTransaction","IncomeList","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5d12af3e.chunk.js","sourcesContent":["export default (state, action) => {\n  switch (action.type) {\n    case \"ADD_INCOME\":\n      return {\n        ...state,\n        incomeTransactions: [action.payload, ...state.incomeTransactions],\n      };\n    case \"ADD_EXPENSE\":\n      return {\n        ...state,\n        expenseTransactions: [action.payload, ...state.expenseTransactions],\n      };\n    case \"DELETE_TRANSACTION\":\n      return {\n        ...state,\n        incomeTransactions: state.incomeTransactions.filter(\n          (incomeTransaction) => incomeTransaction.id !== action.payload\n        ),\n        expenseTransactions: state.expenseTransactions.filter(\n          (expenseTransaction) => expenseTransaction.id !== action.payload\n        ),\n      };\n\n    default:\n      return state;\n  }\n};\n","import React, { createContext, useReducer, useEffect } from \"react\";\nimport AppReducer from \"./AppReducer\";\n\nconst initialState = {\n  incomeTransactions:\n    JSON.parse(localStorage.getItem(\"incomeTransactions\")) || [],\n  expenseTransactions:\n    JSON.parse(localStorage.getItem(\"expenseTransactions\")) || [],\n};\n\nexport const GlobalContext = createContext(initialState);\n\nexport const GlobalContextProvider = ({ children }) => {\n  const [state, dispatch] = useReducer(AppReducer, initialState);\n\n  useEffect(() => {\n    localStorage.setItem(\n      \"incomeTransactions\",\n      JSON.stringify(state.incomeTransactions)\n    );\n    localStorage.setItem(\n      \"expenseTransactions\",\n      JSON.stringify(state.expenseTransactions)\n    );\n  });\n\n  const deleteTransaction = (id) => {\n    dispatch({\n      type: \"DELETE_TRANSACTION\",\n      payload: id,\n    });\n  };\n\n  const addIncome = (incomeTransaction) => {\n    dispatch({\n      type: \"ADD_INCOME\",\n      payload: incomeTransaction,\n    });\n  };\n\n  const addExpense = (expenseTransaction) => {\n    dispatch({\n      type: \"ADD_EXPENSE\",\n      payload: expenseTransaction,\n    });\n  };\n\n  return (\n    <GlobalContext.Provider\n      value={{\n        incomeTransactions: state.incomeTransactions,\n        expenseTransactions: state.expenseTransactions,\n        deleteTransaction,\n        addIncome,\n        addExpense,\n      }}\n    >\n      {children}\n    </GlobalContext.Provider>\n  );\n};\n","import React, { useContext, useState } from \"react\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport { GlobalContext } from \"../context/GlobalState\";\n\nfunction AddTransaction() {\n  const { addIncome, addExpense } = useContext(GlobalContext);\n  const [income, setIncome] = useState({\n    incomeText: \"\",\n    incomeAmount: 0,\n  });\n\n  const { incomeText, incomeAmount } = income;\n  const [expense, setExpense] = useState({\n    expenseText: \"\",\n    expenseAmount: 0,\n  });\n\n  const { expenseText, expenseAmount } = expense;\n\n  const onChangeExpense = (e) => {\n    setExpense({ ...expense, [e.target.name]: e.target.value });\n  };\n  const onChangeIncome = (e) => {\n    setIncome({ ...income, [e.target.name]: e.target.value });\n  };\n  const onSubmitIncome = (e) => {\n    e.preventDefault();\n\n    if (incomeText !== \"\") {\n      const newIncomeTransaction = {\n        id: uuidv4(),\n        incomeText,\n        incomeAmount: incomeAmount * 1,\n      };\n\n      addIncome(newIncomeTransaction);\n\n      setIncome({\n        incomeText: \"\",\n        incomeAmount: 0,\n      });\n    }\n  };\n  const onSubmitExpense = (e) => {\n    e.preventDefault();\n\n    if (expenseText !== \"\") {\n      const newExpenseTransaction = {\n        id: uuidv4(),\n        expenseText,\n        expenseAmount: expenseAmount * 1,\n      };\n\n      addExpense(newExpenseTransaction);\n\n      setExpense({\n        expenseText: \"\",\n        expenseAmount: 0,\n      });\n    }\n  };\n  return (\n    <div className=\"form-wrapper\">\n      <form onSubmit={onSubmitIncome}>\n        <div className=\"input-group income\">\n          <input\n            type=\"text\"\n            name=\"incomeText\"\n            value={incomeText}\n            placeholder=\"Add Income...\"\n            autoComplete=\"off\"\n            onChange={onChangeIncome}\n          />\n          <input\n            type=\"number\"\n            name=\"incomeAmount\"\n            value={incomeAmount}\n            placeholder=\"Amount\"\n            autoComplete=\"off\"\n            onChange={onChangeIncome}\n          />\n          <input type=\"submit\" value=\"Submit\" />\n        </div>\n      </form>\n      <form onSubmit={onSubmitExpense}>\n        <div className=\"input-group expense\">\n          <input\n            type=\"text\"\n            name=\"expenseText\"\n            value={expenseText}\n            placeholder=\"Add Expense...\"\n            autoComplete=\"off\"\n            onChange={onChangeExpense}\n          />\n          <input\n            type=\"number\"\n            name=\"expenseAmount\"\n            value={expenseAmount}\n            placeholder=\"Amount\"\n            autoComplete=\"off\"\n            onChange={onChangeExpense}\n          />\n          <input type=\"submit\" value=\"Submit\" />\n        </div>\n      </form>\n    </div>\n  );\n}\n\nexport default AddTransaction;\n","import React, { useContext } from \"react\";\nimport { GlobalContext } from \"../context/GlobalState\";\n\nfunction Balance() {\n  const { incomeTransactions, expenseTransactions } = useContext(GlobalContext);\n\n  const incomeAmounts = incomeTransactions.map(\n    (incomeTransaction) => incomeTransaction.incomeAmount\n  );\n\n  const expenseAmounts = expenseTransactions.map(\n    (expenseTransaction) => expenseTransaction.expenseAmount\n  );\n\n  const totalIncome = incomeAmounts\n    .reduce((acc, item) => (acc += item), 0)\n    .toFixed(2);\n\n  const totalExpenses = expenseAmounts\n    .reduce((acc, item) => (acc += item), 0)\n    .toFixed(2);\n\n  return (\n    <div className=\"balance\">\n      <h2>Your Balance</h2>\n      <h3>${(totalIncome - totalExpenses).toFixed(2)}</h3>\n      <div className=\"income-expense\">\n        <div className=\"plus\">\n          <h3>Income</h3>\n          <p>+${totalIncome}</p>\n        </div>\n        <div className=\"minus\">\n          <h3>Expenses</h3>\n          <p>-${totalExpenses}</p>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Balance;\n","import React, { useContext } from \"react\";\nimport { GlobalContext } from \"../context/GlobalState\";\n\nconst ExpenseTransaction = ({ expenseTransaction }) => {\n  const { deleteTransaction } = useContext(GlobalContext);\n\n  return (\n    <li className=\"transaction\">\n      <span className=\"transaction-text\">{expenseTransaction.expenseText}</span>\n      <span className=\"transaction-amount\">\n        ${expenseTransaction.expenseAmount}\n      </span>\n      <button\n        onClick={() => deleteTransaction(expenseTransaction.id)}\n        className=\"delete-btn\"\n      >\n        <i className=\"fas fa-trash\"></i>\n      </button>\n    </li>\n  );\n};\n\nexport default ExpenseTransaction;\n","import React, { useContext } from \"react\";\nimport { GlobalContext } from \"../context/GlobalState\";\nimport ExpenseTransaction from \"./ExpenseTransaction\";\n\nfunction ExpenseList() {\n  const { expenseTransactions } = useContext(GlobalContext);\n  console.log(expenseTransactions);\n\n  return (\n    <div className=\"transactions transactions-expense\">\n      <h2>Transaction History</h2>\n      <ul className=\"transaction-list\">\n        {expenseTransactions.map((expenseTransaction) => (\n          <ExpenseTransaction\n            key={expenseTransaction.id}\n            expenseTransaction={expenseTransaction}\n          />\n        ))}\n      </ul>\n    </div>\n  );\n}\n\nexport default ExpenseList;\n","import React from \"react\";\n\nconst Header = () => {\n  return (\n    <div className=\"header\">\n      <h1>Budget App</h1>\n    </div>\n  );\n};\n\nexport default Header;\n","import React, { useContext } from \"react\";\nimport { GlobalContext } from \"../context/GlobalState\";\n\nfunction IncomeTransaction({ incomeTransaction }) {\n  const { deleteTransaction } = useContext(GlobalContext);\n\n  return (\n    <li className=\"transaction\">\n      <span className=\"transaction-text\">{incomeTransaction.incomeText}</span>\n      <span className=\"transaction-amount\">\n        ${incomeTransaction.incomeAmount}\n      </span>\n      <button\n        onClick={() => deleteTransaction(incomeTransaction.id)}\n        className=\"delete-btn\"\n      >\n        <i className=\"fas fa-trash\"></i>\n      </button>\n    </li>\n  );\n}\n\nexport default IncomeTransaction;\n","import React, { useContext } from \"react\";\nimport { GlobalContext } from \"../context/GlobalState\";\nimport IncomeTransaction from \"./IncomeTransaction\";\n\nfunction IncomeList() {\n  const { incomeTransactions } = useContext(GlobalContext);\n  console.log(incomeTransactions);\n\n  return (\n    <div className=\"transactions transactions-income\">\n      <h2>Transaction History</h2>\n      <ul className=\"transaction-list\">\n        {incomeTransactions.map((incomeTransaction) => (\n          <IncomeTransaction\n            key={incomeTransaction.id}\n            incomeTransaction={incomeTransaction}\n          />\n        ))}\n      </ul>\n    </div>\n  );\n}\n\nexport default IncomeList;\n","import \"./App.css\";\nimport AddTransaction from \"./components/AddTransaction\";\nimport Balance from \"./components/Balance\";\nimport ExpenseList from \"./components/ExpenseList\";\nimport Header from \"./components/Header\";\nimport IncomeList from \"./components/IncomeList\";\nimport { GlobalContextProvider } from \"./context/GlobalState\";\n\nfunction App() {\n  return (\n    <GlobalContextProvider>\n      <div className=\"container\">\n        <div className=\"app-wrapper\">\n          <Header />\n          <Balance />\n          <IncomeList />\n          <ExpenseList />\n          <AddTransaction />\n        </div>\n      </div>\n    </GlobalContextProvider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}