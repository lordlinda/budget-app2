{"version":3,"sources":["context/AppReducer.js","context/GlobalState.js","components/AddTransaction.js","components/Balance.js","components/ExpenseList.js","components/Header.js","components/IncomeTransaction.js","components/IncomeList.js","App.js","reportWebVitals.js","index.js"],"names":["state","action","type","transactions","payload","filter","transaction","id","initialState","JSON","parse","localStorage","getItem","GlobalContext","createContext","GlobalContextProvider","children","useReducer","AppReducer","dispatch","useEffect","setItem","stringify","Provider","value","deleteTransaction","addIncome","incomeTransaction","AddTransaction","useContext","useState","text","amount","data","setData","setType","onChange","e","target","name","className","onSubmit","preventDefault","newTransaction","uuidv4","date","Date","placeholder","autoComplete","Balance","incomeAmounts","expenseAmounts","totalIncome","reduce","acc","item","parseInt","totalExpenses","toFixed","ExpenseList","Header","IncomeTransaction","onClick","IncomeList","map","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.4e8910a1.chunk.js","sourcesContent":["export default (state, action) => {\n  switch (action.type) {\n    case \"ADD_INCOME\":\n      return {\n        ...state,\n        transactions: [action.payload, ...state.transactions],\n      };\n\n    case \"DELETE_TRANSACTION\":\n      return {\n        ...state,\n        transactions: state.transactions.filter(\n          (transaction) => transaction.id !== action.payload\n        ),\n      };\n\n    default:\n      return state;\n  }\n};\n","import React, { createContext, useReducer, useEffect } from \"react\";\nimport AppReducer from \"./AppReducer\";\n\nconst initialState = {\n  transactions: JSON.parse(localStorage.getItem(\"transactions\")) || [],\n};\n\nexport const GlobalContext = createContext(initialState);\n\nexport const GlobalContextProvider = ({ children }) => {\n  const [state, dispatch] = useReducer(AppReducer, initialState);\n\n  useEffect(() => {\n    localStorage.setItem(\"transactions\", JSON.stringify(state.transactions));\n  });\n\n  const deleteTransaction = (id) => {\n    dispatch({\n      type: \"DELETE_TRANSACTION\",\n      payload: id,\n    });\n  };\n\n  const addIncome = (incomeTransaction) => {\n    dispatch({\n      type: \"ADD_INCOME\",\n      payload: incomeTransaction,\n    });\n  };\n\n  return (\n    <GlobalContext.Provider\n      value={{\n        transactions: state.transactions,\n        deleteTransaction,\n        addIncome,\n      }}\n    >\n      {children}\n    </GlobalContext.Provider>\n  );\n};\n","import React, { useContext, useState } from \"react\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport { GlobalContext } from \"../context/GlobalState\";\n\nfunction AddTransaction() {\n  const { addIncome } = useContext(GlobalContext);\n  const [data, setData] = useState({\n    text: \"\",\n    amount: 0,\n  });\n  const [type, setType] = useState(\"\");\n  const { text, amount } = data;\n\n  const onChange = (e) => {\n    setData({ ...data, [e.target.name]: e.target.value });\n  };\n\n  const onSubmitIncome = (e) => {\n    e.preventDefault();\n\n    if (text !== \"\" || text !== 0) {\n      const newTransaction = {\n        id: uuidv4(),\n        text,\n        amount,\n        type,\n        date: new Date(),\n      };\n\n      addIncome(newTransaction);\n\n      setData({\n        text: \"\",\n        amount: 0,\n      });\n      setType(\"\");\n    }\n  };\n\n  return (\n    <div className=\"form-wrapper\">\n      <form onSubmit={onSubmitIncome}>\n        <div className=\"input-group income\">\n          <input\n            type=\"text\"\n            name=\"text\"\n            value={text}\n            placeholder=\"Add Income...\"\n            autoComplete=\"off\"\n            onChange={onChange}\n          />\n          <input\n            type=\"number\"\n            name=\"amount\"\n            value={amount}\n            placeholder=\"Amount\"\n            autoComplete=\"off\"\n            onChange={onChange}\n          />\n          <div className=\"custom-select\">\n            <select value={type} onChange={(e) => setType(e.target.value)}>\n              <option>--select type--</option>\n              <option value=\"income\">Income</option>\n              <option value=\"expense\">Expense</option>\n            </select>\n          </div>\n          <input type=\"submit\" value=\"Submit\" />\n        </div>\n      </form>\n    </div>\n  );\n}\n\nexport default AddTransaction;\n","import React, { useContext } from \"react\";\nimport { GlobalContext } from \"../context/GlobalState\";\n\nfunction Balance() {\n  const { transactions } = useContext(GlobalContext);\n\n  const incomeAmounts = transactions.filter(\n    (transaction) => transaction.type === \"income\"\n  );\n  const expenseAmounts = transactions.filter(\n    (transaction) => transaction.type === \"expense\"\n  );\n\n  const totalIncome = incomeAmounts.reduce(\n    (acc, item) => (acc += parseInt(item.amount)),\n    0\n  );\n\n  const totalExpenses = expenseAmounts.reduce(\n    (acc, item) => (acc += parseInt(item.amount)),\n    0\n  );\n\n  return (\n    <div className=\"balance\">\n      <h2>Your Balance</h2>\n      <h3>${(totalIncome - totalExpenses).toFixed(2)}</h3>\n      <div className=\"income-expense\">\n        <div className=\"plus\">\n          <h3>Income</h3>\n          <p>+${totalIncome}</p>\n        </div>\n        <div className=\"minus\">\n          <h3>Expenses</h3>\n          <p>-${totalExpenses}</p>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Balance;\n","import React, { useContext } from \"react\";\nimport { GlobalContext } from \"../context/GlobalState\";\nimport ExpenseTransaction from \"./ExpenseTransaction\";\n\nfunction ExpenseList() {\n  const { expenseTransactions } = useContext(GlobalContext);\n  console.log(expenseTransactions);\n\n  return (\n    <div className=\"transactions transactions-expense\">\n      <h2>Transaction History</h2>\n      <ul className=\"transaction-list\">\n        {expenseTransactions.map((expenseTransaction) => (\n          <ExpenseTransaction\n            key={expenseTransaction.id}\n            expenseTransaction={expenseTransaction}\n          />\n        ))}\n      </ul>\n    </div>\n  );\n}\n\nexport default ExpenseList;\n","import React from \"react\";\n\nconst Header = () => {\n  return (\n    <div className=\"header\">\n      <h1>Budget App</h1>\n    </div>\n  );\n};\n\nexport default Header;\n","import React, { useContext } from \"react\";\nimport { GlobalContext } from \"../context/GlobalState\";\n\nfunction IncomeTransaction({ incomeTransaction }) {\n  const { deleteTransaction } = useContext(GlobalContext);\n\n  return (\n    <li\n      className={`transaction ${\n        incomeTransaction.type === \"income\"\n          ? \"transactions-income \"\n          : \"transactions-expense\"\n      }`}\n    >\n      <span className=\"transaction-text\">{incomeTransaction.text}</span>\n      <span className=\"transaction-amount\">${incomeTransaction.amount}</span>\n      <button\n        onClick={() => deleteTransaction(incomeTransaction.id)}\n        className=\"delete-btn\"\n      >\n        <i className=\"fas fa-trash\"></i>\n      </button>\n    </li>\n  );\n}\n\nexport default IncomeTransaction;\n","import React, { useContext } from \"react\";\nimport { GlobalContext } from \"../context/GlobalState\";\nimport IncomeTransaction from \"./IncomeTransaction\";\n\nfunction IncomeList() {\n  const { transactions } = useContext(GlobalContext);\n\n  return (\n    <div className=\"transactions\">\n      <h2>Transaction History</h2>\n      <ul className=\"transaction-list\">\n        {transactions.map((transaction) => (\n          <IncomeTransaction\n            key={transaction.id}\n            incomeTransaction={transaction}\n          />\n        ))}\n      </ul>\n    </div>\n  );\n}\n\nexport default IncomeList;\n","import \"./App.css\";\nimport AddTransaction from \"./components/AddTransaction\";\nimport Balance from \"./components/Balance\";\nimport ExpenseList from \"./components/ExpenseList\";\nimport Header from \"./components/Header\";\nimport IncomeList from \"./components/IncomeList\";\nimport { GlobalContextProvider } from \"./context/GlobalState\";\n\nfunction App() {\n  return (\n    <GlobalContextProvider>\n      <div className=\"container\">\n        <div className=\"app-wrapper\">\n          <Header />\n          <Balance />\n          <IncomeList />\n          <AddTransaction />\n        </div>\n      </div>\n    </GlobalContextProvider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}